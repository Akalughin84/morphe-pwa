// /core/analytics.js
// v2.0.0 ‚Äî –¢–µ–∫—Å—Ç–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –±–µ–∑ –≥—Ä–∞—Ñ–∏–∫–æ–≤

import { UserService } from '/services/userService.js';
import { WorkoutTracker } from '/modules/workoutTracker.js';
import { ProgressTracker } from '/modules/progressTracker.js';
import { NutritionTracker } from '/modules/nutritionTracker.js';
import { StrengthGoalTracker } from '/core/strengthGoalTracker.js';
import { DateUtils } from '/utils/dateUtils.js';

/**
 * AnalyticsEngine ‚Äî –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –≤—ã–≤–æ–¥—ã –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
 * –í–º–µ—Å—Ç–æ –≥—Ä–∞—Ñ–∏–∫–æ–≤ ‚Äî —Å–º—ã—Å–ª.
 */
export class AnalyticsEngine {
  constructor(profile = null, history = null) {
    this.profile = profile || (UserService.getProfile()?.data ?? null);
    this.workouts = new WorkoutTracker();
    this.progress = new ProgressTracker();
    this.nutrition = new NutritionTracker();
    this.goals = new StrengthGoalTracker();
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å–≤–æ–¥–Ω—ã–π –∞–Ω–∞–ª–∏–∑
   */
  getSummary() {
    if (!this.profile) {
      return {
        title: "–ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å",
        summary: "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å ‚Äî –∏ Morphe –Ω–∞—á–Ω—ë—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å."
      };
    }

    const weekly = this._getWeeklyAnalysis();
    const progress = this._getProgressInsight();
    const nutrition = this._getNutritionInsight();
    const goals = this._getGoalsInsight();

    return {
      title: this._getTitle(progress.trend, weekly.consistency),
      summary: [
        weekly.text,
        progress.text,
        nutrition.text,
        goals.text
      ].filter(Boolean).join(' ')
    };
  }

  /**
   * –ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–±—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
   */
  _getTitle(weightTrend, consistency) {
    if (consistency === 'excellent' && weightTrend === 'on-track') {
      return "–û—Ç–ª–∏—á–Ω—ã–π —Ç–µ–º–ø!";
    }
    if (consistency === 'good' && weightTrend === 'on-track') {
      return "–í—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø—É—Ç–∏";
    }
    if (consistency === 'low') {
      return "–ü–æ—Ä–∞ –≤–µ—Ä–Ω—É—Ç—å—Å—è";
    }
    return "–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å";
  }

  /**
   * –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
   */
  _getWeeklyAnalysis() {
    const lastWeek = this.workouts.getLastWeek();
    const prevWeek = this._getPreviousWeek();

    const currentCount = lastWeek.length;
    const prevCount = prevWeek.length;

    let consistency = 'low';
    let text = '';

    if (currentCount >= 4) {
      consistency = 'excellent';
      text = '–í—ã —Ç—Ä–µ–Ω–∏—Ä—É–µ—Ç–µ—Å—å —Ä–µ–≥—É–ª—è—Ä–Ω–æ ‚Äî —ç—Ç–æ –∫–ª—é—á –∫ –ø—Ä–æ–≥—Ä–µ—Å—Å—É.';
    } else if (currentCount >= 3) {
      consistency = 'good';
      text = '–•–æ—Ä–æ—à–∞—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ.';
    } else if (currentCount >= 1) {
      consistency = 'medium';
      text = '–í—ã –Ω–∞—á–∞–ª–∏. –¢–µ–ø–µ—Ä—å –≤–∞–∂–Ω–æ –∑–∞–∫—Ä–µ–ø–∏—Ç—å –ø—Ä–∏–≤—ã—á–∫—É.';
    } else {
      text = '–í—ã –¥–∞–≤–Ω–æ –Ω–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞–ª–∏—Å—å. –ù–∞—á–Ω–∏—Ç–µ —Å –ª—ë–≥–∫–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏.';
    }

    // –î–∏–Ω–∞–º–∏–∫–∞
    if (prevCount > 0) {
      const change = ((currentCount - prevCount) / prevCount) * 100;
      if (change > 20) {
        text += ' –í—ã —É–≤–µ–ª–∏—á–∏–ª–∏ —á–∞—Å—Ç–æ—Ç—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ ‚Äî –æ—Ç–ª–∏—á–Ω–∞—è –¥–∏–Ω–∞–º–∏–∫–∞!';
      } else if (change < -20) {
        text += ' –ß–∞—Å—Ç–æ—Ç–∞ —Å–Ω–∏–∑–∏–ª–∞—Å—å. –í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞–≥—Ä—É–∑–∫—É.';
      }
    }

    return { count: currentCount, consistency, text };
  }

  /**
   * –ü—Ä–æ—à–ª–∞—è –Ω–µ–¥–µ–ª—è
   */
  _getPreviousWeek() {
    const twoWeeksAgo = new Date();
    twoWeeksAgo.setDate(twoWeeksAgo.getDate() - 14);
    const cutoff = twoWeeksAgo.getTime();

    return this.workouts.getAll().filter(t => t.timestamp >= cutoff && t.timestamp < twoWeeksAgo.getTime() + 7 * 24 * 60 * 60 * 1000);
  }

  /**
   * –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ –≤–µ—Å—É
   */
  _getProgressInsight() {
    const recent = this.progress.getSince(21); // –∑–∞ 3 –Ω–µ–¥–µ–ª–∏
    if (recent.length < 2) {
      return { trend: 'unknown', text: '' };
    }

    const first = recent[recent.length - 1];
    const last = recent[0];
    const changePerWeek = (last.weight - first.weight) / (recent.length / 7);

    let trend = 'off-track';
    let text = '';

    if (this.profile.goal === 'lose') {
      if (changePerWeek < -0.3) {
        trend = 'on-track';
        text = '–í—ã —Ç–µ—Ä—è–µ—Ç–µ –≤–µ—Å –≤ —Ö–æ—Ä–æ—à–µ–º —Ç–µ–º–ø–µ ‚Äî –æ–∫–æ–ª–æ ' + Math.abs(changePerWeek).toFixed(1) + ' –∫–≥ –≤ –Ω–µ–¥–µ–ª—é.';
      } else if (changePerWeek > 0) {
        text = '–í–µ—Å —Ä–∞—Å—Ç—ë—Ç, —Ö–æ—Ç—è —Ü–µ–ª—å ‚Äî –ø–æ—Ö—É–¥–µ–Ω–∏–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∏—Ç–∞–Ω–∏–µ.';
      } else {
        text = '–í–µ—Å –ø–æ—á—Ç–∏ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è. –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞–ª–æ—Ä–∏–∏.';
      }
    }

    if (this.profile.goal === 'gain') {
      if (changePerWeek > 0.3) {
        trend = 'on-track';
        text = '–í—ã –Ω–∞–±–∏—Ä–∞–µ—Ç–µ –≤–µ—Å —Å —Ö–æ—Ä–æ—à–µ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é ‚Äî ' + changePerWeek.toFixed(1) + ' –∫–≥ –≤ –Ω–µ–¥–µ–ª—é.';
      } else if (changePerWeek < 0) {
        text = '–í–µ—Å —Å–Ω–∏–∂–∞–µ—Ç—Å—è, —Ö–æ—Ç—è —Ü–µ–ª—å ‚Äî –Ω–∞–±–æ—Ä –º–∞—Å—Å—ã. –£–≤–µ–ª–∏—á—å—Ç–µ –∫–∞–ª–æ—Ä–∏–∏.';
      } else {
        text = '–í–µ—Å —Å—Ç–∞–±–∏–ª–µ–Ω. –î–ª—è —Ä–æ—Å—Ç–∞ –º—ã—à—Ü –Ω—É–∂–µ–Ω –ø—Ä–æ—Ñ–∏—Ü–∏—Ç.';
      }
    }

    if (this.profile.goal === 'maintain') {
      if (Math.abs(changePerWeek) < 0.2) {
        trend = 'on-track';
        text = '–û—Ç–ª–∏—á–Ω–æ! –í—ã —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç–µ —Ñ–æ—Ä–º—É ‚Äî –∫–æ–ª–µ–±–∞–Ω–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω—ã.';
      } else {
        text = '–§–æ—Ä–º–∞ –Ω–µ–º–Ω–æ–≥–æ –º–µ–Ω—è–µ—Ç—Å—è. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ ‚Äî —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–π—Ç–µ –ø–∏—Ç–∞–Ω–∏–µ.';
      }
    }

    return { trend, text };
  }

  /**
   * –ê–Ω–∞–ª–∏–∑ –ø–∏—Ç–∞–Ω–∏—è
   */
  _getNutritionInsight() {
    const today = this.nutrition.getAllToday();
    if (today.length === 0) {
      return { text: '–°–µ–≥–æ–¥–Ω—è –≤—ã –µ—â—ë –Ω–µ –∑–∞–ø–∏—Å—ã–≤–∞–ª–∏ –ø—Ä–∏—ë–º—ã –ø–∏—â–∏.' };
    }

    const totals = this.nutrition.getTotalMacrosToday();
    const engine = new (window.AnalyticsEngine ? null : () => {}); // –∑–∞–≥–ª—É—à–∫–∞
    // –ù–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –º–æ–∂–Ω–æ —Å—Ä–∞–≤–Ω–∏—Ç—å —Å —Ü–µ–ª—è–º–∏, –Ω–æ –ø–æ–∫–∞ ‚Äî –æ–±—â–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    return { text: '–í—ã —Å–µ–≥–æ–¥–Ω—è –ø–æ—Ç—Ä–µ–±–∏–ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–µ–ª–∫–∞ –∏ —É–≥–ª–µ–≤–æ–¥–æ–≤ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è.' };
  }

  /**
   * –ê–Ω–∞–ª–∏–∑ —Ü–µ–ª–µ–π
   */
  _getGoalsInsight() {
    const completed = this.goals.getCompleted();
    const active = this.goals.getActive();

    if (completed.length > 0) {
      return { text: `üéâ –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ ${completed.length} —Ü–µ–ª–∏${completed.length === 1 ? '' : '–π'} –ø–æ —Å–∏–ª–µ. –≠—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!` };
    }

    if (active.length > 0) {
      const closest = active.reduce((a, b) => 
        this.goals.getCompletionForecast(a)?.days < this.goals.getCompletionForecast(b)?.days ? a : b
      );
      const forecast = this.goals.getCompletionForecast(closest);
      if (forecast) {
        return { text: `üéØ –ë–ª–∏–∂–∞–π—à–∞—è —Ü–µ–ª—å: "${closest.exerciseName}". –ü—Ä–æ–≥–Ω–æ–∑ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è ‚Äî —á–µ—Ä–µ–∑ ${forecast.days} –¥–Ω–µ–π.` };
      }
    }

    return { text: '' };
  }
}