// /core/HeaderController.js
// v1.3.0 ‚Äî –ó–∞—â–∏—Ç–∞ –æ—Ç NoModificationAllowedError –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ

const CACHE = new Map();

export class HeaderController {
  /**
   * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —à–∞–ø–∫—É –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
   */
  static async loadHeader() {
    const placeholder = document.getElementById('header-placeholder');
    // ‚úÖ –ó–∞—â–∏—Ç–∞: —ç–ª–µ–º–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –ò –∏–º–µ—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—è
    if (!placeholder || !placeholder.parentNode) {
      console.warn('‚ö†Ô∏è #header-placeholder –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ –≤ DOM ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —à–∞–ø–∫–∏');
      return;
    }

    // –ò–∑–±–µ–≥–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
    if (document.getElementById('main-header')) {
      this.initMenu();
      return;
    }

    try {
      let html = CACHE.get('/partials/header.html');
      if (!html) {
        const response = await fetch('/partials/header.html');
        if (!response.ok) throw new Error(`HTTP ${response.status}`);
        html = await response.text();
        CACHE.set('/partials/header.html', html);
      }

      placeholder.outerHTML = `<header id="main-header">${html}</header>`;
      this.initMenu();
      await this.initGlobalUI();
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —à–∞–ø–∫–∏:', err);
      // ‚úÖ –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ placeholder –µ—â—ë –≤ DOM
      if (placeholder.parentNode) {
        placeholder.outerHTML = '<header class="header-error">–®–∞–ø–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</header>';
      }
    }
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–µ UI-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
   */
  static async initGlobalUI() {
    try {
      const { ScrollToTop } = await import('/modules/scrollToTop.js');
      new ScrollToTop();
    } catch (e) {
      console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–Ω–æ–ø–∫—É "–í–≤–µ—Ä—Ö":', e);
    }
  }

  /**
   * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–æ–¥–≤–∞–ª
   */
  static async loadFooter() {
    const placeholder = document.getElementById('footer-placeholder');
    if (!placeholder || !placeholder.parentNode) {
      console.warn('‚ö†Ô∏è #footer-placeholder –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ –≤ DOM ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–æ–¥–≤–∞–ª–∞');
      return;
    }

    if (document.querySelector('footer.footer')) return;

    try {
      let html = CACHE.get('/partials/footer.html');
      if (!html) {
        const response = await fetch('/partials/footer.html');
        if (!response.ok) throw new Error(`HTTP ${response.status}`);
        html = await response.text();
        CACHE.set('/partials/footer.html', html);
      }

      placeholder.outerHTML = `<footer class="footer">${html}</footer>`;
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–¥–≤–∞–ª–∞:', err);
      if (placeholder.parentNode) {
        placeholder.outerHTML = '<footer class="footer-error">–ü–æ–¥–≤–∞–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</footer>';
      }
    }
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
   */
  static initMenu() {
    const header = document.getElementById('main-header');
    if (!header) return;

    const menuToggle = header.querySelector('#menuToggle');
    const mainNav = header.querySelector('#mainNav');
    const closeBtn = mainNav?.querySelector('.nav-close-btn');

    if (!menuToggle || !mainNav) {
      console.warn('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã –º–µ–Ω—é');
      return;
    }

    const closeMenu = () => {
      menuToggle.setAttribute('aria-expanded', 'false');
      mainNav.setAttribute('aria-hidden', 'true');
      document.body.classList.remove('menu-open');
       // üî• –£–±–∏—Ä–∞–µ–º —Ñ–æ–∫—É—Å —Å –∑–∞–∫—Ä—ã–≤–∞—é—â–µ–π –∫–Ω–æ–ø–∫–∏
      if (closeBtn && closeBtn === document.activeElement) {
        closeBtn.blur(); // —Å–Ω–∏–º–∞–µ–º —Ñ–æ–∫—É—Å
      }

      // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –±—É—Ä–≥–µ—Ä-–∫–Ω–æ–ø–∫—É
      menuToggle.focus();
    };
    

    const toggleMenu = () => {
      const isExpanded = menuToggle.getAttribute('aria-expanded') === 'true';
      if (isExpanded) {
        closeMenu();
      } else {
        menuToggle.setAttribute('aria-expanded', 'true');
        mainNav.setAttribute('aria-hidden', 'false');
        document.body.classList.add('menu-open');
      }
    };

    // –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–ª—É—à–∞—Ç–µ–ª–µ–π
    menuToggle.removeEventListener('click', toggleMenu);
    if (closeBtn) closeBtn.removeEventListener('click', closeMenu);
    if (this._outsideClickListener) {
      document.removeEventListener('click', this._outsideClickListener);
    }

    // –ù–æ–≤—ã–µ —Å–ª—É—à–∞—Ç–µ–ª–∏
    menuToggle.addEventListener('click', toggleMenu);
    if (closeBtn) closeBtn.addEventListener('click', closeMenu);

    this._outsideClickListener = (e) => {
      if (
        mainNav.getAttribute('aria-hidden') === 'false' &&
        !mainNav.contains(e.target) &&
        !menuToggle.contains(e.target)
      ) {
        closeMenu();
      }
    };
    document.addEventListener('click', this._outsideClickListener);

    const escapeHandler = (e) => {
      if (e.key === 'Escape' && mainNav.getAttribute('aria-hidden') === 'false') {
        closeMenu();
      }
    };
    document.removeEventListener('keydown', escapeHandler);
    document.addEventListener('keydown', escapeHandler);
    this._escapeHandler = escapeHandler;
  }
}