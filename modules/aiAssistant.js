// modules/aiAssistant.js

export class AIAgent {
  constructor(profile, program) {
    this.profile = profile;
    this.program = program;
  }

  getAdvice() {
    const tips = [];
    const dayOfWeek = new Date().getDay(); // 0 = –≤—Å, 1 = –ø–Ω...
    const todayWorkout = this.program[dayOfWeek === 0 ? 6 : dayOfWeek - 1];

    // 1. –¢—Ä–∞–≤–º—ã
    if (this.profile.injuries && this.profile.injuries.length > 0) {
      tips.push({
        type: 'warning',
        text: `‚ö†Ô∏è –°–µ–≥–æ–¥–Ω—è —É —Ç–µ–±—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–∞ ${this.profile.injuries.join(', ')}. –°–ª–µ–¥–∏ –∑–∞ —Ç–µ—Ö–Ω–∏–∫–æ–π.`
      });
    }

    // 2. –ü—Ä–æ–≥—Ä–µ—Å—Å–∏—è
    tips.push({
      type: 'success',
      text: `‚úÖ –ü–æ–ø—Ä–æ–±—É–π —É–≤–µ–ª–∏—á–∏—Ç—å –≤–µ—Å –Ω–∞ 1‚Äì2 –∫–≥ –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ–¥—Ö–æ–¥–µ ‚Äî —Ç—ã –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–∏!`
    });

    // 3. –ü–∏—Ç–∞–Ω–∏–µ –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
    if (this.profile.goal === 'muscle') {
      tips.push({
        type: 'nutrition',
        text: `ü•õ –ü–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤—ã–ø–µ–π –±–µ–ª–æ–∫ –≤ —Ç–µ—á–µ–Ω–∏–µ 45 –º–∏–Ω—É—Ç ‚Äî —ç—Ç–æ —É—Å–∫–æ—Ä–∏—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –º—ã—à—Ü.`
      });
    }

    // 4. –í–æ–¥–∞
    tips.push({
      type: 'info',
      text: `üíß –ù–µ –∑–∞–±—ã–≤–∞–π –ø–∏—Ç—å –≤–æ–¥—É! –ú–∏–Ω–∏–º—É–º 30 –º–ª –Ω–∞ –∫–≥ –≤–µ—Å–∞ ‚Äî —Ç–µ–±–µ –Ω—É–∂–Ω–æ ~${Math.round(this.profile.weight * 30)} –º–ª.`
    });

    // 5. –õ–∏—á–Ω—ã–π —Å–æ–≤–µ—Ç –¥–ª—è –æ–ø—ã—Ç–Ω—ã—Ö
    if (this.profile.experience === 'advanced') {
      tips.push({
        type: 'personal',
        text: `üî• –û—Ç–ª–∏—á–Ω–∞—è –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞! –°–ª–µ–¥—É—é—â–∞—è —Ü–µ–ª—å ‚Äî +5 –∫–≥ –≤ –ø—Ä–∏—Å–µ–¥–µ –∑–∞ 8 –Ω–µ–¥–µ–ª—å.`
      });
    }

    // 6. –°–µ–≥–æ–¥–Ω—è—à–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞
    if (todayWorkout && todayWorkout.type !== 'rest') {
      tips.unshift({
        type: 'info',
        text: `üìÖ –°–µ–≥–æ–¥–Ω—è —É —Ç–µ–±—è: <strong>${todayWorkout.name}</strong>. –ì–æ—Ç–æ–≤?`
      });
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Å–æ–≤–µ—Ç
    return tips.length > 0 
      ? tips[Math.floor(Math.random() * tips.length)] 
      : { type: 'info', text: '–ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!' };
  }

  render(containerId = 'aiAdvice') {
    const container = document.getElementById(containerId);
    if (!container) return;

    const advice = this.getAdvice();
    container.innerHTML = `
      <div class="advice-item advice-${advice.type}">
        ${advice.text}
      </div>
    `;
  }
}