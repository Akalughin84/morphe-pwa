// v2.1.2 ‚Äî Service Worker –¥–ª—è Morphe PWA (–¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –≤–µ—Ä—Å–∏—è)

const CACHE_NAME = 'morphe-v2.1.2'; // ‚Üê –æ–±–Ω–æ–≤–∏–ª –≤–µ—Ä—Å–∏—é

const ASSETS_TO_CACHE = [
  '/',
  '/index.html',
  '/manifest.json',
  '/sw.js',
  '/robots.txt',
  '/sitemap.xml',
  '/favicon.ico',

  // –°—Ç–∏–ª–∏
  '/styles.css',
  '/styles-form.css',
  '/styles-home.css',
  '/styles-shared.css',

  // –Ø–¥—Ä–æ
  '/core/HeaderController.js',
  '/core/HomeDashboard.js',
  '/core/themeManager.js',
  '/core/analytics.js',
  '/core/workoutPlanner.js',
  '/core/menuGenerator.js',
  '/core/nutritionEngine.js',  // ‚Üê –ø—Ä–æ–≤–µ—Ä—è–µ–º —ç—Ç–æ—Ç
  '/core/achievementEngine.js',
  '/core/exerciseRecommender.js',
  '/core/goalTracker.js',
  '/core/adaptiveEngine.js',

  // –ú–æ–¥—É–ª–∏
  '/modules/profile.js',
  '/modules/workoutTracker.js',
  '/modules/progressTracker.js',
  '/modules/nutritionTracker.js',
  '/modules/notifications.js',
  '/modules/achievementsManager.js',
  '/modules/onboardingManager.js',
  '/modules/supplementAdvisor.js',
  '/modules/strengthGoalTracker.js',
  '/modules/aiAssistant.js',
  '/modules/adaptiveEngine.js',
  '/modules/premiumManager.js',
  '/modules/timer.js',

  // –°–µ—Ä–≤–∏—Å—ã
  '/services/userService.js',
  '/services/dataService.js',
  '/services/syncService.js',

  // –£—Ç–∏–ª–∏—Ç—ã
  '/utils/storage.js',
  '/utils/dom.js',
  '/utils/dateUtils.js',
  '/utils/validators.js',
  '/utils/logger.js',

  // –ö–æ–Ω—Ñ–∏–≥
  '/config/userConfig.js',

  // –ß–∞—Å—Ç–∏—á–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã
  '/partials/header.html',
  '/partials/footer.html',

  // –°—Ç—Ä–∞–Ω–∏—Ü—ã
  '/pages/onboarding.html',
  '/pages/profile.html',
  '/pages/workouts.html',
  '/pages/nutrition.html',
  '/pages/progress.html',
  '/pages/supplements.html',
  '/pages/premium.html',
  '/pages/notifications.html',
  '/pages/goals.html',
  '/pages/backup.html',
  '/pages/achievements.html',
  '/pages/offline.html',

  // –î–∞–Ω–Ω—ã–µ
  '/data/foods.json',
  '/data/exercises.json',
  '/data/programs.json',
  '/data/supplements.json',

  // –ê—Å—Å–µ—Ç—ã
  '/assets/icons/icon-16.png',
  '/assets/icons/icon-32.png',
  '/assets/icons/icon-192.png',
  '/assets/bg/hero-silhouette.svg',
  
];

self.addEventListener('install', (event) => {
  console.log('üîÑ SW: –ù–∞—á–∞–ª–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∏...');
  event.waitUntil(
    caches.open(CACHE_NAME)
      .then(async (cache) => {
        const failed = [];
        const succeeded = [];

        for (const url of ASSETS_TO_CACHE) {
          try {
            console.log(`üõ†Ô∏è SW: –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞—Ç—å: ${url}`);
            const response = await fetch(url);
            if (!response.ok) {
              throw new Error(`HTTP ${response.status} –¥–ª—è ${url}`);
            }
            const clone = response.clone();
            await cache.put(url, clone);
            succeeded.push(url);
            console.log(`‚úÖ SW: –ó–∞–∫—ç—à–∏—Ä–æ–≤–∞–Ω–æ: ${url}`);
          } catch (err) {
            failed.push({ url, error: err.message });
            console.error(`‚ùå SW: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–∏ ${url}:`, err);
          }
        }

        console.log(`üìä SW: –£—Å–ø–µ—à–Ω–æ: ${succeeded.length}, –ù–µ—É–¥–∞—á–Ω–æ: ${failed.length}`);
        if (failed.length > 0) {
          console.warn('‚ö†Ô∏è SW: –û—à–∏–±–∫–∏:', failed);
        }
      })
      .catch(err => {
        console.error('‚ùå SW: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ install:', err);
      })
  );
});

self.addEventListener('fetch', (event) => {
  if (event.request.mode === 'navigate') {
    event.respondWith(
      fetch(event.request).catch(() => {
        console.log('üåê SW: –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞, –∑–∞–≥—Ä—É–∂–∞–µ–º offline.html');
        return caches.match('/pages/offline.html');
      })
    );
    return;
  }

  event.respondWith(
    caches.match(event.request)
      .then(cached => {
        if (cached) {
          console.log(`üì¶ SW: –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–∑ –∫—ç—à–∞: ${event.request.url}`);
          return cached;
        }
        return fetch(event.request).catch(() => {
          console.log(`üåê SW: –°–µ—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –ø—Ä–æ–±—É–µ–º –∏–∑ –∫—ç—à–∞: ${event.request.url}`);
          return caches.match(event.request);
        });
      })
      .catch(() => {
        console.warn('üö´ SW: –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –≤ –∫—ç—à–µ, –Ω–∏ –≤ —Å–µ—Ç–∏:', event.request.url);
      })
  );
});

self.addEventListener('activate', (event) => {
  event.waitUntil(
    caches.keys().then((keyList) =>
      Promise.all(
        keyList.map((key) => {
          if (key !== CACHE_NAME) {
            console.log('üóëÔ∏è SW: –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫—ç—à:', key);
            return caches.delete(key);
          }
        })
      )
    )
  );

  self.clients.claim();
  console.log('‚úÖ SW: –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤');
});